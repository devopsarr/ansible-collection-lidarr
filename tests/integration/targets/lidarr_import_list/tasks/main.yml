---
- name: create import list
  devopsarr.lidarr.lidarr_import_list:
    enable_automatic_add: false
    should_monitor_existing: true
    should_monitor: 'entireArtist'
    quality_profile_id: 1
    metadata_profile_id: 1
    list_order: 0
    monitor_new_items: 'none'
    root_folder_path: '/tmp'
    should_search: false
    fields:
      - name: 'apiKey'
        value: 'Key'
      - name: 'baseUrl'
        value: 'localhost'
      - name: 'profileIds'
        value: [1]
      - name: 'rootFolderPaths'
        value: ['/tmp']
    name: 'LidarrImport'
    list_type: 'program'
    config_contract: 'LidarrSettings'
    implementation: 'LidarrImport'
    tags: []
    lidarr_api_key: '{{ lidarr_api_key }}'
    lidarr_url: '{{ lidarr_url }}'
  register: result
- name: assert import list creation
  assert:
    that:
      - result['implementation'] == 'LidarrImport'
# ----------------------------------------------------------------------------
- name: edit already present import list
  devopsarr.lidarr.lidarr_import_list:
    enable_automatic_add: false
    should_monitor_existing: true
    should_monitor: 'entireArtist'
    quality_profile_id: 1
    metadata_profile_id: 1
    list_order: 0
    monitor_new_items: 'all'
    root_folder_path: '/tmp'
    should_search: false
    fields:
      - name: 'apiKey'
        value: 'Key'
      - name: 'baseUrl'
        value: 'localhost'
      - name: 'profileIds'
        value: [1]
      - name: 'rootFolderPaths'
        value: ['/tmp']
    name: 'LidarrImport'
    list_type: 'program'
    config_contract: 'LidarrSettings'
    implementation: 'LidarrImport'
    tags: []
    lidarr_api_key: '{{ lidarr_api_key }}'
    lidarr_url: '{{ lidarr_url }}'
  register: result
- name: assert import list changes
  assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: test idempotency
  devopsarr.lidarr.lidarr_import_list:
    enable_automatic_add: false
    should_monitor_existing: true
    should_monitor: 'entireArtist'
    quality_profile_id: 1
    metadata_profile_id: 1
    list_order: 0
    monitor_new_items: 'all'
    root_folder_path: '/tmp'
    should_search: false
    fields:
      - name: 'apiKey'
        value: 'Key'
      - name: 'baseUrl'
        value: 'localhost'
      - name: 'profileIds'
        value: [1]
      - name: 'rootFolderPaths'
        value: ['/tmp']
    name: 'LidarrImport'
    list_type: 'program'
    config_contract: 'LidarrSettings'
    implementation: 'LidarrImport'
    tags: []
    lidarr_api_key: '{{ lidarr_api_key }}'
    lidarr_url: '{{ lidarr_url }}'
  register: result
- name: assert import list idempotency
  assert:
    that:
      - result.changed == false
# ----------------------------------------------------------------------------
- name: test sensitive un-change
  devopsarr.lidarr.lidarr_import_list:
    enable_automatic_add: false
    should_monitor_existing: true
    should_monitor: 'entireArtist'
    quality_profile_id: 1
    metadata_profile_id: 1
    list_order: 0
    monitor_new_items: 'all'
    root_folder_path: '/tmp'
    should_search: false
    fields:
      - name: 'apiKey'
        value: 'Key'
      - name: 'baseUrl'
        value: 'localhost'
      - name: 'profileIds'
        value: [1]
      - name: 'rootFolderPaths'
        value: ['/tmp']
    name: 'LidarrImport'
    list_type: 'program'
    config_contract: 'LidarrSettings'
    implementation: 'LidarrImport'
    tags: []
    lidarr_api_key: '{{ lidarr_api_key }}'
    lidarr_url: '{{ lidarr_url }}'
  register: result
- name: assert import list idempotency
  assert:
    that:
      - result.changed == false
# ----------------------------------------------------------------------------
- name: test key change
  devopsarr.lidarr.lidarr_import_list:
    enable_automatic_add: false
    should_monitor_existing: true
    should_monitor: 'entireArtist'
    quality_profile_id: 1
    metadata_profile_id: 1
    list_order: 0
    monitor_new_items: 'all'
    root_folder_path: '/tmp'
    should_search: false
    fields:
      - name: 'apiKey'
        value: 'Key123'
      - name: 'baseUrl'
        value: 'localhost'
      - name: 'profileIds'
        value: [1]
      - name: 'rootFolderPaths'
        value: ['/tmp']
    name: 'LidarrImport'
    list_type: 'program'
    config_contract: 'LidarrSettings'
    implementation: 'LidarrImport'
    tags: []
    update_secrets: true
    lidarr_api_key: '{{ lidarr_api_key }}'
    lidarr_url: '{{ lidarr_url }}'
  register: result
- name: assert import list idempotency
  assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: delete import list
  devopsarr.lidarr.lidarr_import_list:
    name: 'LidarrImport'
    lidarr_api_key: '{{ lidarr_api_key }}'
    lidarr_url: '{{ lidarr_url }}'
    state: 'absent'
  register: result
- name: assert import list deletion
  assert:
    that:
      - result['id'] == 0
